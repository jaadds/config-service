name: Build Stage
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: jaadds/config-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Print the token
        run: echo ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: 'high'
          acs-report-enable: true
      - name: Build, Unit & Integration Tests
        run: | 
          chmod +x gradlew
          ./gradlew build
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build
    runs-on: ubuntu-22.04    
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Print the token
        run: echo ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Build container image
        run: |
          echo ${{ env.REGISTRY }}
          echo ${{ env.IMAGE_NAME }}
          echo ${{ env.VERSION }}
          chmod +x gradlew
          ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      
      - name: OCI image Vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image-reference: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: 'high'
          acs-report-enable: true

      # - name: Upload Vulnerability Report
      #   uses: github/codeql-action/upload-sarif@v2
      #   if: success() || failure()
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}
      
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Push image to GitHub Container Registry
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          